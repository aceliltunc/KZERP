Solution YapÄ±sÄ±
KZERP.sln 
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.API                // ASP.NET Web API (Backend)
â”‚   â”œâ”€â”€ Controllers                 // REST endpointler (ProductsController, OrdersController, AuthController)
â”‚   â”œâ”€â”€ DTOs                        // Veri transfer objeleri (API <-> UI)
â”‚   â”œâ”€â”€ Middlewares                 // Token doÄŸrulama, logging, exception handling
â”‚   â”œâ”€â”€ Program.cs / Startup.cs     // DI config, pipeline, JWT setup
â”‚   â””â”€â”€ appsettings.json            // Azure SQL DB connection string, diÄŸer konfigÃ¼rasyon
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.UI (ASP.NET MVC)   // KullanÄ±cÄ± ArayÃ¼zÃ¼ (Frontend)
â”‚   â”œâ”€â”€ Controllers                 // MVC Controller (DashboardController, InventoryController)
â”‚   â”œâ”€â”€ Views                       // Razor Viewâ€™lar (.cshtml)
â”‚   â”œâ”€â”€ Models                      // UI ViewModelâ€™leri
â”‚   â””â”€â”€ wwwroot                     // CSS, JS, resimler
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.Core               // Business Logic Layer (Ä°ÅŸ KurallarÄ±)
â”‚   â”œâ”€â”€ Interfaces                  // Service interfaceâ€™leri (IProductService, IOrderService)
â”‚   â”œâ”€â”€ Services                    // Servis implementasyonlarÄ±
â”‚   â”œâ”€â”€ Entities                    // Domain modelleri (Product, Order, User, WorkOrder vs.)
â”‚   â””â”€â”€ Helpers                     // Validasyon, hesaplama, util sÄ±nÄ±flarÄ±
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.Infrastructure     // Data Access Layer (EF Core + Repository)
â”‚   â”œâ”€â”€ Data                        // DbContext (ERPDbContext)
â”‚   â”œâ”€â”€ Repositories                // Repository pattern (ProductRepository, OrderRepository)
â”‚   â””â”€â”€ Migrations                  // EF Core migration dosyalarÄ± (Azure SQL DB ile uyumlu)
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.Identity           // KullanÄ±cÄ± yÃ¶netimi (ASP.NET Identity)
â”‚   â”œâ”€â”€ ApplicationUser.cs          // IdentityUserâ€™dan tÃ¼reyen kullanÄ±cÄ± sÄ±nÄ±fÄ±
â”‚   â”œâ”€â”€ RoleConfig.cs               // Rol tanÄ±mlarÄ± (Admin, Worker, Engineer)
â”‚   â”œâ”€â”€ IdentityDbContext.cs        // Identity iÃ§in DbContext
â”‚   â””â”€â”€ Services                    // Auth servisleri (Login, Register, JWT)
â”‚
â”€â”€ ðŸ“‚ KZERP.Azure              // Azure entegrasyonlarÄ± (opsiyonel klasÃ¶r)
â”‚   â”œâ”€â”€ IoTHubIntegration.cs       // Raspberry Pi verilerini IoT Hub ile alma
â”‚   â”œâ”€â”€ AppServiceDeployment       // API ve UI deploy ayarlarÄ±
â”‚   â””â”€â”€ AzureConfig.cs             // Connection string ve servis ayarlarÄ±
â”‚
â”œâ”€â”€ ðŸ“‚ KZERP.Tests              // Unit / Integration testler
â”‚   â”œâ”€â”€ API.Tests                   // Web API testleri
â”‚   â”œâ”€â”€ Core.Tests                  // Business Logic testleri
â”‚   â””â”€â”€ UI.Tests                    // UI testleri (opsiyonel)
â”œâ”€â”€ ðŸ“‚ KZERP.ReactUI            // React tabanlÄ± modern UI (opsiyonel ikinci arayÃ¼z)
â”‚   â”œâ”€â”€ src                         // React bileÅŸenleri (Dashboard, Charts, IoT Data vs.)
â”‚   â”œâ”€â”€ public                      // index.html
â”‚   â”œâ”€â”€ package.json                // baÄŸÄ±mlÄ±lÄ±klar
â”‚   â””â”€â”€ README.md
